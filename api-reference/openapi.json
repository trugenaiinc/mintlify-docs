{
  "openapi": "3.0.3",
  "info": {
    "title": "Trugen MCP API",
    "version": "1.0.0",
    "description": "OpenAPI specification for MCP endpoint"
  },
  "servers": [
    {
      "url": "https://api.trugen.ai/v1"
    }
  ],
  "paths": {
    "/mcp": {
      "get": {
        "summary": "Get MCP configurations",
        "description": "Fetches a list of available MCP configurations. Requires `X-API-Key` authentication.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful MCP response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "0f7b696c-ecdf-4900-addc-e7cfdbbce1c7"
                      },
                      "name": {
                        "type": "string",
                        "example": "Brave MCP"
                      },
                      "description": {
                        "type": "string",
                        "example": "Brave MCP"
                      },
                      "type": {
                        "type": "string",
                        "example": "sse"
                      },
                      "arguments": {
                        "type": "string",
                        "example": "{\"url\": \"http://ec2-18-216-51-35.us-east-2.compute.amazonaws.com:8080/sse\"}"
                      },
                      "cache_tools_list": {
                        "type": "boolean",
                        "example": true
                      },
                      "event_messages": {
                        "type": "string",
                        "example": "{\"on_delay\": {\"delay\": 1, \"message\": \"I am still waiting for the information.\"}, \"on_error\": {\"message\": \"Failed to search the web for the information.\"}, \"on_start\": {\"message\": \"\"}, \"on_success\": {\"message\": \"\"}}"
                      },
                      "is_active": {
                        "type": "boolean",
                        "example": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-15T16:56:45.580326Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-15T16:56:45.580326Z"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "arguments",
                      "cache_tools_list",
                      "event_messages",
                      "is_active",
                      "created_at",
                      "updated_at"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – invalid API key"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create MCP",
        "description": "Create a new MCP configuration.",
        "operationId": "createMCP",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "example": "MCP"
                  },
                  "arguments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  },
                  "cache_tools_list": {
                    "type": "boolean"
                  },
                  "event_messages": {
                    "type": "object",
                    "properties": {
                      "on_start": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      },
                      "on_delay": {
                        "type": "object",
                        "properties": {
                          "delay": {
                            "type": "integer"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      },
                      "on_error": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "is_active": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "type",
                  "arguments",
                  "is_active"
                ]
              },
              "example": {
                "name": "MCP 5",
                "description": "You are a helpful assistant to MCP",
                "type": "MCP",
                "arguments": [
                  {
                    "url": "http://ec2-18-216-51-35.us-east-2.compute.amazonaws.com:8080/sse"
                  }
                ],
                "cache_tools_list": true,
                "event_messages": {
                  "on_start": {
                    "message": "Successfully received data."
                  },
                  "on_delay": {
                    "delay": 1,
                    "message": "Waiting for stock price data..."
                  },
                  "on_error": {
                    "message": "Failed to retrieve stock price data"
                  }
                },
                "is_active": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "MCP created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized - Missing or invalid API key"
          }
        }
      }
    },
    "/mcp/{id}": {
      "delete": {
        "summary": "Delete MCP",
        "description": "Deletes an MCP configuration by its ID. Requires `X-API-Key` authentication.",
        "operationId": "deleteMCP",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the MCP configuration",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "0f7b696c-ecdf-4900-addc-e7cfdbbce1c7"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "MCP deleted successfully (no content returned)"
          },
          "400": {
            "description": "Invalid MCP ID"
          },
          "401": {
            "description": "Unauthorized – Missing or invalid API key"
          },
          "404": {
            "description": "MCP not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update MCP",
        "description": "Updates an existing MCP configuration by its ID. Requires `X-API-Key` authentication.",
        "operationId": "updateMCP",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the MCP configuration",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "0d585f9a-e992-42d4-bda2-9c25f2bd7eda"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "example": "MCP"
                  },
                  "arguments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  },
                  "cache_tools_list": {
                    "type": "boolean"
                  },
                  "event_messages": {
                    "type": "object",
                    "properties": {
                      "on_start": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      },
                      "on_delay": {
                        "type": "object",
                        "properties": {
                          "delay": {
                            "type": "integer"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      },
                      "on_error": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "is_active": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "type",
                  "arguments",
                  "is_active"
                ]
              },
              "example": {
                "name": "MCP 3 update",
                "description": "You are a helpful assistant to MCP",
                "type": "MCP",
                "arguments": [
                  {
                    "url": "http://ec2-18-216-51-35.us-east-2.compute.amazonaws.com:8080/sse"
                  }
                ],
                "cache_tools_list": true,
                "event_messages": {
                  "on_start": {
                    "message": "Successfully received data."
                  },
                  "on_delay": {
                    "delay": 1,
                    "message": "Waiting for stock price data..."
                  },
                  "on_error": {
                    "message": "Failed to retrieve stock price data"
                  }
                },
                "is_active": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "MCP updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "arguments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      }
                    },
                    "cache_tools_list": {
                      "type": "boolean"
                    },
                    "event_messages": {
                      "type": "object"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized – Missing or invalid API key"
          },
          "404": {
            "description": "MCP not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "summary": "Get MCP by ID",
        "description": "Fetch a single MCP configuration by its unique ID. Requires `X-API-Key` authentication.",
        "operationId": "getMCPById",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the MCP configuration",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "0d585f9a-e992-42d4-bda2-9c25f2bd7eda"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MCP object successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "dcf04568-6bf5-40cf-bd6f-d68e4cb5b216"
                    },
                    "name": {
                      "type": "string",
                      "example": "MCP 5"
                    },
                    "description": {
                      "type": "string",
                      "example": "You are a helpful assistant to MCP"
                    },
                    "type": {
                      "type": "string",
                      "example": "MCP"
                    },
                    "arguments": {
                      "type": "string",
                      "example": "[{\"url\": \"http://ec2-18-216-51-35.us-east-2.compute.amazonaws.com:8080/sse\"}]"
                    },
                    "cache_tools_list": {
                      "type": "boolean",
                      "example": true
                    },
                    "event_messages": {
                      "type": "string",
                      "example": "{\"on_delay\": {\"delay\": 1, \"message\": \"Waiting for stock price data...\"}, \"on_error\": {\"message\": \"Failed to retrieve stock price data\"}, \"on_start\": {\"message\": \"Successfully received data.\"}}"
                    },
                    "is_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-10-02T17:22:10.96453Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-10-02T17:22:10.96453Z"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "type",
                    "arguments",
                    "cache_tools_list",
                    "event_messages",
                    "is_active",
                    "created_at",
                    "updated_at"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – invalid API key"
          },
          "404": {
            "description": "MCP not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/knowledgebase": {
      "post": {
        "summary": "Create Knowledge Base",
        "description": "Uploads a document or raw text to create a new Knowledge Base entry. Requires `X-API-Key` authentication.",
        "operationId": "createKnowledgeBase",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Test 10",
                    "description": "Name of the knowledge base."
                  },
                  "description": {
                    "type": "string",
                    "example": "Test desc",
                    "description": "Description of the knowledge base."
                  },
                  "is_active": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the knowledge base is active."
                  },
                  "input": {
                    "type": "string",
                    "format": "binary",
                    "description": "Document file to upload (e.g., .pdf, .docx). Optional if text is provided."
                  },
                  "text": {
                    "type": "string",
                    "example": "sample file text",
                    "description": "Optional raw text input for the knowledge base (used if no file is uploaded)."
                  }
                },
                "required": [
                  "name",
                  "description",
                  "is_active"
                ]
              },
              "example": {
                "name": "Test 10",
                "description": "Test desc",
                "is_active": "true",
                "input": "@/C:/temp/Resume.docx",
                "text": "sample file text"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Knowledge Base created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "5273e435-3cbb-4a11-9ea9-2c150ba19009"
                    },
                    "message": {
                      "type": "string",
                      "example": "Knowledge Base created successfully"
                    }
                  },
                  "required": [
                    "id",
                    "message"
                  ]
                },
                "example": {
                  "id": "5273e435-3cbb-4a11-9ea9-2c150ba19009",
                  "message": "Knowledge Base created successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or file/text upload error"
          },
          "401": {
            "description": "Unauthorized – invalid or missing API key"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "summary": "Get all Knowledge Bases",
        "description": "Fetches a list of all available knowledge bases with their metadata and associated documents. Requires `X-API-Key` authentication.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Knowledge Base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
                      },
                      "name": {
                        "type": "string",
                        "example": "Test 10"
                      },
                      "description": {
                        "type": "string",
                        "example": "Test desc"
                      },
                      "is_active": {
                        "type": "boolean",
                        "example": true
                      },
                      "index": {
                        "type": "string",
                        "example": "dg-y611apn.svc.aped-4627-b74a.pinecone.io"
                      },
                      "namespace": {
                        "type": "string",
                        "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
                      },
                      "no_of_rec": {
                        "type": "integer",
                        "example": 20
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-08T16:34:19.984033Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-08T16:34:19.984033Z"
                      },
                      "documents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "9a2ad090-aafe-4662-8eb8-a11a404431ea"
                            },
                            "kb_id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
                            },
                            "name": {
                              "type": "string",
                              "example": "Resume.docx"
                            },
                            "type": {
                              "type": "string",
                              "example": ".docx"
                            },
                            "is_active": {
                              "type": "boolean",
                              "example": true
                            },
                            "preview_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://trugen.s3.us-east-2.amazonaws.com/uploads/kb/ff152cd9-efb6-4367-a545-b861c9fbd3d0/Resume.docx"
                            }
                          },
                          "required": [
                            "id",
                            "kb_id",
                            "name",
                            "type",
                            "is_active",
                            "preview_url"
                          ]
                        }
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description",
                      "is_active",
                      "index",
                      "namespace",
                      "no_of_rec",
                      "created_at",
                      "updated_at",
                      "documents"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – Invalid or missing API key"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/knowledgebase/{id}": {
      "get": {
        "summary": "Get Knowledge Base by ID",
        "description": "Retrieves a specific knowledge base and its associated documents using the provided Knowledge Base ID. Requires `X-API-Key` authentication.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "UUID of the Knowledge Base to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "d837afdc-f95f-4e4d-abe4-40894db22a02"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Knowledge Base retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "knowledge_base": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
                        },
                        "name": {
                          "type": "string",
                          "example": "Test 10"
                        },
                        "description": {
                          "type": "string",
                          "example": "Test desc"
                        },
                        "is_active": {
                          "type": "boolean",
                          "example": true
                        },
                        "index": {
                          "type": "string",
                          "example": "dg-y611apn.svc.aped-4627-b74a.pinecone.io"
                        },
                        "namespace": {
                          "type": "string",
                          "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
                        },
                        "no_of_rec": {
                          "type": "integer",
                          "example": 20
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-10-08T16:34:19.984033Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-10-08T16:34:19.984033Z"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "is_active",
                        "index",
                        "namespace",
                        "no_of_rec",
                        "created_at",
                        "updated_at"
                      ]
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "9a2ad090-aafe-4662-8eb8-a11a404431ea"
                          },
                          "kb_id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
                          },
                          "name": {
                            "type": "string",
                            "example": "Resume.docx"
                          },
                          "type": {
                            "type": "string",
                            "example": ".docx"
                          },
                          "is_active": {
                            "type": "boolean",
                            "example": true
                          },
                          "preview_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://trugen.s3.us-east-2.amazonaws.com/uploads/kb/ff152cd9-efb6-4367-a545-b861c9fbd3d0/Resume.docx"
                          }
                        },
                        "required": [
                          "id",
                          "kb_id",
                          "name",
                          "type",
                          "is_active",
                          "preview_url"
                        ]
                      }
                    }
                  },
                  "required": [
                    "knowledge_base",
                    "documents"
                  ]
                },
                "example": {
                  "documents": [
                    {
                      "id": "9a2ad090-aafe-4662-8eb8-a11a404431ea",
                      "is_active": true,
                      "kb_id": "ff152cd9-efb6-4367-a545-b861c9fbd3d0",
                      "name": "Resume.docx",
                      "preview_url": "https://trugen.s3.us-east-2.amazonaws.com/uploads/kb/ff152cd9-efb6-4367-a545-b861c9fbd3d0/Resume.docx",
                      "type": ".docx"
                    },
                    {
                      "id": "a991725c-12b3-4bee-afc2-0689111848fe",
                      "is_active": true,
                      "kb_id": "ff152cd9-efb6-4367-a545-b861c9fbd3d0",
                      "name": "58910277-a9cd-4a34-91ad-23654843bce5.txt",
                      "preview_url": "https://trugen.s3.us-east-2.amazonaws.com/uploads/kb/ff152cd9-efb6-4367-a545-b861c9fbd3d0/58910277-a9cd-4a34-91ad-23654843bce5.txt",
                      "type": "text"
                    }
                  ],
                  "knowledge_base": {
                    "created_at": "2025-10-08T16:34:19.984033Z",
                    "description": "Test desc",
                    "id": "ff152cd9-efb6-4367-a545-b861c9fbd3d0",
                    "index": "dg-y611apn.svc.aped-4627-b74a.pinecone.io",
                    "is_active": true,
                    "name": "Test 10",
                    "namespace": "ff152cd9-efb6-4367-a545-b861c9fbd3d0",
                    "no_of_rec": 20,
                    "updated_at": "2025-10-08T16:34:19.984033Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Knowledge Base ID"
          },
          "401": {
            "description": "Unauthorized – Missing or invalid API key"
          },
          "404": {
            "description": "Knowledge Base not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update Knowledge Base Configuration",
        "description": "Updates the specified Knowledge Base configuration by ID. Requires `X-API-Key` authentication.",
        "operationId": "updateKnowledgeBase",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "UUID of the Knowledge Base to update",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test host name"
                  },
                  "description": {
                    "type": "string",
                    "example": "You are a helpful assistant and testing"
                  },
                  "is_active": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": [
                  "name",
                  "description",
                  "is_active"
                ]
              },
              "example": {
                "name": "test host name",
                "description": "You are a helpful assistant and testing",
                "is_active": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Knowledge Base updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
                    },
                    "message": {
                      "type": "string",
                      "example": "Knowledge Base configuration updated successfully"
                    }
                  },
                  "required": [
                    "id",
                    "message"
                  ]
                },
                "example": {
                  "id": "ff152cd9-efb6-4367-a545-b861c9fbd3d0",
                  "message": "Knowledge Base configuration updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized – Missing or invalid API key"
          },
          "404": {
            "description": "Knowledge Base not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete Knowledge Base Configuration",
        "description": "Deletes a Knowledge Base configuration by ID. Requires `X-API-Key` authentication.",
        "operationId": "deleteKnowledgeBase",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "UUID of the Knowledge Base to delete",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Knowledge Base deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ff152cd9-efb6-4367-a545-b861c9fbd3d0"
                    },
                    "message": {
                      "type": "string",
                      "example": "Knowledge base configuration deleted successfully"
                    }
                  },
                  "required": [
                    "id",
                    "message"
                  ]
                },
                "example": {
                  "id": "ff152cd9-efb6-4367-a545-b861c9fbd3d0",
                  "message": "Knowledge base configuration deleted successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – Missing or invalid API key"
          },
          "404": {
            "description": "Knowledge Base not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/knowledgebase/{id}/doc": {
      "post": {
        "summary": "Add Content to Existing Knowledge Base",
        "description": "Uploads additional content or a document to an existing Knowledge Base. Requires `X-API-Key` authentication.",
        "operationId": "addKnowledgeBaseDocument",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "UUID of the Knowledge Base to which the content will be added",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "d837afdc-f95f-4e4d-abe4-40894db22a02"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Text or URL content to be added to the Knowledge Base",
                    "example": "https://example.com/"
                  },
                  "input": {
                    "type": "string",
                    "format": "binary",
                    "description": "Optional file upload (e.g., .pdf, .docx)"
                  }
                },
                "required": [
                  "text"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "added": {
                      "type": "integer",
                      "example": 1
                    },
                    "kb_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "d837afdc-f95f-4e4d-abe4-40894db22a02"
                    },
                    "message": {
                      "type": "string",
                      "example": "Content added successfully to existing Knowledge Base"
                    }
                  },
                  "required": [
                    "added",
                    "kb_id",
                    "message"
                  ]
                },
                "example": {
                  "added": 1,
                  "kb_id": "d837afdc-f95f-4e4d-abe4-40894db22a02",
                  "message": "Content added successfully to existing Knowledge Base"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "401": {
            "description": "Unauthorized – Invalid or missing API key"
          },
          "404": {
            "description": "Knowledge Base not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/knowledgebase/doc/{id}": {
      "delete": {
        "summary": "Delete a Document from Knowledge Base",
        "description": "Deletes a specific document from an existing Knowledge Base using its document ID.",
        "operationId": "deleteKnowledgeBaseDocument",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "UUID of the document to be deleted",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "0ebaba9d-2221-46bc-a3b4-b013252e49be"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "0ebaba9d-2221-46bc-a3b4-b013252e49be"
                    },
                    "message": {
                      "type": "string",
                      "example": "Document deleted successfully"
                    }
                  },
                  "required": [
                    "id",
                    "message"
                  ]
                },
                "example": {
                  "id": "0ebaba9d-2221-46bc-a3b4-b013252e49be",
                  "message": "Document deleted successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – Invalid or missing API key"
          },
          "404": {
            "description": "Document not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}